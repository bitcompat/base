name: build

on:
  workflow_call:
    inputs:
      name:
        required: true
        type: string
      build-args:
        type: string
        required: false
        default: ''
      cache-scope:
        type: string
        required: false
        default: 'buildkit'
      image_tag:
        type: string
        required: true
        default: 'latest'
      push:
        type: boolean
        required: false
        default: true
    secrets:
      AWS_ROLE_ARN:
        required: true
      COSIGN_PRIVATE_KEY:
        required: true
      COSIGN_PASSWORD:
        required: true

concurrency:
  group: ${{ github.workflow }}-${{ github.event.number || github.ref }}
  cancel-in-progress: true

jobs:
  build_package:
    name: Build package - ${{ inputs.name }}
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - uses: actions/checkout@master
        with:
          fetch-depth: 1

      - name: Install Cosign
        uses: sigstore/cosign-installer@main

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        if: github.repository_owner == 'bitcompat'
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: us-east-1

      - name: Login to Amazon ECR Public
        uses: aws-actions/amazon-ecr-login@v1
        if: github.repository_owner == 'bitcompat'
        with:
          registry-type: public

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        if: ${{ inputs.push == true }}
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Cleanup image tag input
        id: cleanup_image_tag
        run: |
          CLEANED_UP=$(echo "$IMAGE_TAGS" | sed 's/ #.*//')
          CLEANED_UP="${CLEANED_UP//'%'/'%25'}"
          CLEANED_UP="${CLEANED_UP//$'\n'/'%0A'}"
          CLEANED_UP="${CLEANED_UP//$'\r'/'%0D'}"
          echo "image_tags=${CLEANED_UP}" >> $GITHUB_OUTPUT
        env:
          IMAGE_TAGS: ${{ inputs.image_tag }}

      - id: docker_meta
        name: Extract docker image metadata
        uses: docker/metadata-action@v4.1.1
        with:
          images: |
            ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}
            public.ecr.aws/bitcompat/${{ github.event.repository.name }},enable=${{ github.repository_owner == 'bitcompat' }}
          tags: |
            ${{ steps.cleanup_image_tag.outputs.image_tags }}
            type=sha
            type=sha,format=long

      - name: Build and Push container images
        uses: docker/build-push-action@v3
        with:
          platforms: linux/amd64,linux/arm64
          build-args: ${{ inputs.build-args }}
          push: ${{ inputs.push }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          cache-from: type=gha,scope=${{ inputs.cache-scope }}
          cache-to: type=gha,mode=max,scope=${{ inputs.cache-scope }}

      - name: Sign image with a key
        run: |
          cosign sign --key env://COSIGN_PRIVATE_KEY ${TAGS}
        if: ${{ inputs.push == true }}
        env:
          TAGS: ${{ steps.docker_meta.outputs.tags }}
          COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
